- name: "Create user"
  register: "mosquitto_user"
  ansible.builtin.user:
    append: false
    create_home: false
    group: "{{ mosquitto.group | default(omit) }}"
    name: "mosquitto"
    shell: "/usr/bin/nologin"
    state: "present"
    system: true

- name: "Create config directories"
  loop:
    - { path: "" }
    - { path: "config/" }
    - { path: "data/" }
  ansible.builtin.file:
    <<: &owner_group
      owner: "{{ mosquitto_user.name }}"
      group: "{{ mosquitto.group | default(mosquitto_user.name) }}"
    path: "{{ mosquitto.config_dir }}/{{ item.path }}"
    state: "directory"
    mode: 0750

- name: "Copy config files"
  loop:
    - { path: "mosquitto.conf" }
    - { path: "acl", mode: "400" }
    - { path: "passwords", mode: "400" }
  ansible.builtin.template:
    <<: *owner_group
    src: "{{ item.path }}.j2"
    dest: "{{ mosquitto.config_dir }}/config/{{ item.path }}"
    mode: "{{ item.mode | default('640') }}"

- name: "Create service fragment"
  include_role:
    name: "container"
    tasks_from: "service-fragment"
  vars:
    default_fragment:
      name: "mosquitto"
      definition:
        image: "eclipse-mosquitto:2"
        restart: "unless-stopped"
        user: "{{ mosquitto_user.uid }}:{{ mosquitto_user.group }}"
        volumes:
          - "{{ mosquitto.config_dir }}/config:/mosquitto/config"
          - "{{ mosquitto.config_dir }}/data:/mosquitto/data"
    # TODO: The TLS config here is specific to automate. This should be abstracted.
    fragment: |
      {% if mosquitto.fragment.proxy is mapping -%}
        {% set name = mosquitto.fragment.name | default(default_fragment.name, True) -%}
        {%
          set default_proxy = {
            "definition": {
              "labels": {
                "avatar.subdomain": mosquitto.fragment.proxy.subdomain,
                "traefik.docker.network": mosquitto.fragment.proxy.network,
                "traefik.tcp.routers." ~ name ~ ".entryPoints": mosquitto.fragment.proxy.entrypoint,
                "traefik.tcp.routers." ~ name ~ ".rule": "HostSNI(`" ~ mosquitto.fragment.proxy.subdomain ~ "." ~ domain_name ~ "`)",
                "traefik.tcp.routers." ~ name ~ ".tls": "true"
                "traefik.tcp.routers." ~ name ~ ".tls.certresolver": "default"
                "traefik.tcp.routers." ~ name ~ ".tls.domains[0].main": domain_name
                "traefik.tcp.routers." ~ name ~ ".tls.domains[0].sans": "*." ~ domain_name
                "traefik.tcp.services." ~ name ~ ".loadbalancer.server.port": 1883,
              },
            },
          }
        -%}
      {% endif -%}

      {{
        default_fragment
          | combine(mosquitto.fragment | default({}), recursive=True, list_merge='append_rp')
          | combine({"proxy": None}, recursive=True, list_merge='append_rp')
          | to_json
      }}
