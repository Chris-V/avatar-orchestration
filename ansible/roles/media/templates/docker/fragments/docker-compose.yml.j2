version: "3.7"

services:
  deluge:
    container_name: "deluge"
    image: "ghcr.io/linuxserver/deluge:latest"
    network_mode: "service:vpn"
    restart: "unless-stopped"
    depends_on:
      - vpn
    environment:
      TZ: "{{ timezone }}"
      PUID: {{ system_appdata_uid }}
      PGID: {{ system_data_gid }}
      UMASK_SET: '022'
    labels:
      avatar.subdomain: "deluge"
      traefik.http.services.deluge.loadbalancer.server.port: 8112
    volumes:
      - "{{ deluge_config_dir }}:/config"
      - "{{ downloads_dir }}:/downloads"

  jackett:
    container_name: "jackett"
    image: "ghcr.io/linuxserver/jackett:latest"
    network_mode: "service:vpn"
    restart: "unless-stopped"
    depends_on:
      - vpn
    environment:
      TZ: "{{ timezone }}"
      PUID: {{ system_appdata_uid }}
      PGID: {{ system_data_gid }}
    labels:
      avatar.subdomain: "jackett"
      traefik.http.services.jackett.loadbalancer.server.port: 9117
    volumes:
      - "{{ jackett_config_dir }}:/config"
      - "{{ jackett_downloads_dir }}:/downloads"

  jellyfin:
    container_name: "jellyfin"
    image: "ghcr.io/linuxserver/jellyfin:latest"
    restart: "unless-stopped"
    devices:
      - "/dev/dri:/dev/dri"
    environment:
      TZ: "{{ timezone }}"
      PUID: {{ system_appdata_uid }}
      PGID: {{ system_appdata_gid }}
      UMASK_SET: '027'
    labels:
      avatar.subdomain: "jellyfin"
      traefik.docker.network: "media"
      traefik.http.services.jellyfin.loadbalancer.server.port: 8096
    networks:
      media: {}
    volumes:
      - "{{ jellyfin_config_dir }}:/config"
      - "{{ jellyfin_transcode_dir }}:/transcode"
      - "{{ series_dir }}:/media/series:ro"
      - "{{ movies_dir }}:/media/movies:ro"

  sonarr:
    container_name: "sonarr"
    image: "ghcr.io/linuxserver/sonarr:preview"
    restart: "unless-stopped"
    environment:
      TZ: "{{ timezone }}"
      PUID: {{ system_appdata_uid }}
      PGID: {{ system_media_gid }}
    labels:
      avatar.subdomain: "sonarr"
      traefik.docker.network: "media"
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
    networks:
      media: {}
    volumes:
      - "{{ sonarr_config_dir }}:/config"
      - "{{ series_dir }}:/tv"
      - "{{ downloads_dir }}:/downloads:ro"

  radarr:
    container_name: "radarr"
    image: "ghcr.io/linuxserver/radarr:latest"
    restart: "unless-stopped"
    environment:
      TZ: "{{ timezone }}"
      PUID: {{ system_appdata_uid }}
      PGID: {{ system_media_gid }}
    labels:
      avatar.subdomain: "radarr"
      traefik.docker.network: "media"
      traefik.http.services.radarr.loadbalancer.server.port: 7878
    networks:
      media: {}
    volumes:
      - "{{ radarr_config_dir }}:/config"
      - "{{ movies_dir }}:/movies"
      - "{{ downloads_dir }}:/downloads:ro"

  minecraft:
    container_name: "minecraft"
    image: "itzg/minecraft-server:openj9"
    restart: "unless-stopped"
    user: "{{ system_appdata_uid }}:{{ system_appdata_gid }}"
    stdin_open: true
    tty: true
    # Tuning under Open'J9: https://steinborn.me/posts/tuning-minecraft-openj9/
    environment:
      TZ: "{{ timezone }}"
      EULA: "TRUE"
      LEVEL: "Ultimate"
      SERVER_NAME: "Ultimate"
      MOTD: "The ultimate Minecraft server"
      ICON: "https://i.imgur.com/6VOFSL3.jpg"
      TYPE: "fabric"
      VERSION: "{{ minecraft_version }}"
      GUI: "false"
      MEMORY: "{{ minecraft_heap_mb }}M"
      JVM_XX_OPTS: "-Xmns{{ (minecraft_heap_mb / 2) | int }}M -Xmnx{{ (minecraft_heap_mb * 4 / 5) | int }}M -Xgc:concurrentScavenge -Xgc:dnssExpectedTimeRatioMaximum=3 -Xgc:scvNoAdaptiveTenure -Xdisableexplicitgc -Xtune:virtualized"
      MAX_PLAYERS: 6
      VIEW_DISTANCE: 12
      ENABLE_RCON: "true"
      RCON_PASSWORD: "{{ rcon_password }}"
      RCON_PORT: 25575
      SNOOPER_ENABLED: "false"
      OPS: "{{ minecraft_username }}"
      WHITELIST: "{{ minecraft_username }}"
    networks:
      minecraft: {}
    ports:
      - "25565:25565"
    volumes:
      - "{{ minecraft_data_dir }}:/data"

  minecraft-map:
    container_name: "minecraft-map"
    image: "nginx:latest"
    restart: "unless-stopped"
    environment:
      TZ: "{{ timezone }}"
    labels:
      avatar.subdomain: "minecraft-map"
      traefik.http.services.minecraft-map.loadbalancer.server.port: 80
    networks:
      public: {}
    volumes:
      - "{{ minecraft_map_dir }}:/usr/share/nginx/html:ro"

  minecraft-backup:
    container_name: "minecraft-backup"
    image: "itzg/mc-backup:latest"
    restart: "always"
    network_mode: "service:minecraft"
    environment:
      TZ: "{{ timezone }}"
      BACKUP_NAME: "Ultimate"
      LEVEL: "Ultimate"
      RCON_PASSWORD: "{{ rcon_password }}"
      RCON_PORT: 25575
      TYPE: "fabric"
      BACKUP_INTERVAL: 1d
      INITIAL_DELAY: 12h
      PRUNE_BACKUPS_DAYS: 21
    volumes:
      - "{{ minecraft_data_dir }}:/data:ro"
      - "{{ minecraft_backups_dir }}:/backups"

  appdata-backup:
    container_name: "appdata-backup"
    build:
      context: "{{ docker_apps_dir }}/docker-images/docker-volumes-backup"
      network: "host"
    image: "avatary/docker-volumes-backup"
    network_mode: "none"
    restart: "always"
    environment:
      TZ: "{{ timezone }}"
      PUID: {{ system_appdata_uid }}
      PGID: {{ system_appdata_gid }}
      CRONTAB_CONFIG: "30 3 * * *"
      PAUSE_CONTAINERS: "deluge jackett jellyfin radarr sonarr"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ docker_appdata_dir }}/appdata-backup:/config:ro"
      - "{{ docker_appdata_dir }}:/data:ro"
      - "{{ appdata_backups_dir }}:/backups"
