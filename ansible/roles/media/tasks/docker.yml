- name: Install docker packages
  pacman:
    name: docker docker-compose
    state: present

- name: Enable Docker
  systemd:
    name: docker.service
    state: started
    enabled: yes

- name: Create data directories
  file:
    path: "{{ item.path }}"
    state: directory
    recurse: no
    owner: "docker-appdata"
    group: "{{ item.group | default('docker-appdata', true) }}"
    mode: "{{ item.mode | default('ug=rwx,o=', true) }}"
  loop:
    - { path: '{{ backups_dir }}' }
    - { path: '{{ appdata_backups_dir }}' }
    - { path: '{{ minecraft_backups_dir }}' }
    - { path: '{{ series_dir }}', group: 'media', mode: "ug=rwx,o=rx" }
    - { path: '{{ movies_dir }}', group: 'media', mode: "ug=rwx,o=rx" }
    - { path: '{{ downloads_dir }}', group: 'data', mode: "ug=rwx,o=rx" }
    - { path: '{{ deluge_completed_dir }}', group: 'data', mode: "ug=rwx,o=rx" }
    - { path: '{{ deluge_downloads_dir }}', group: 'data', mode: "ug=rwx,o=rx" }
    - { path: '{{ jackett_downloads_dir }}', group: 'data', mode: "ug=rwx,o=rx" }
    - { path: '{{ minecraft_data_dir }}' }
    - { path: '{{ minecraft_map_dir }}', group: 'data', mode: "ug=rwx,o=rx" }
    - { path: '{{ plex_transcode_dir }}' }

- name: Create docker directories
  file:
    path: '{{ item }}'
    state: directory
    owner: root
    group: docker
    mode: "ug=rwx,o="
  loop:
    - '{{ docker_srv_dir }}'

- name: Copy docker images
  copy:
    src: 'docker-images'
    dest: '{{ docker_srv_dir }}'
    owner: root
    group: docker
    directory_mode: "ug=rwx,o="
    mode: "ug+rw,o=" # Preserve exec. bit where applicable

- name: Copy docker compose
  template:
    src: "{{ item }}.yml.j2"
    dest: '{{ docker_srv_dir }}/{{ item }}.yml'
    owner: root
    group: docker
    mode: 0660
    validate: 'docker-compose -f %s config'
  loop:
    - "docker-compose"
    - "docker-compose.jobs"

- name: Copy initial app configs
  unarchive:
    creates: '{{ docker_appdata_dir }}'
    src: '{{ appdata_archive }}'
    dest: '{{ docker_srv_dir }}'

- name: Copy managed app configs
  copy:
    src: 'appdata/'
    dest: '{{ docker_appdata_dir }}'
    owner: docker-appdata
    group: docker-appdata
    directory_mode: "u=rwx,g=rx,o="
    mode: "u+rw,g+r-w,o=" # Preserve exec. bit where applicable

- name: Populate managed app configs
  template:
    src: 'appdata/{{ item.filename }}.j2'
    dest: '{{ docker_appdata_dir }}/{{ item.filename }}'
    owner: 'docker-appdata'
    group: 'docker-appdata'
    mode: 0640
  loop:
    - { filename: 'glances.conf' }
    - { filename: 'traefik.toml' }
