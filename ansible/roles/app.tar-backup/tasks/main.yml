- name: "Create config directories"
  loop:
    - { path: "" }
  ansible.builtin.file:
    path: "{{ tar_backup.config_dir }}/{{ item.path }}"
    state: "directory"
    group: "root"
    owner: "root"
    mode: 0750

- name: "Create backup directory"
  ansible.builtin.file:
    path: "{{ tar_backup.backup_dir }}"
    state: "directory"
    group: "root"
    owner: "root"
    mode: 0750

- name: "Create rotation config"
  ansible.builtin.copy:
    src: "rotate-backup.ini"
    dest: "{{ tar_backup.config_dir }}/rotate-backup.ini"
    group: "root"
    owner: "root"
    mode: 0750

- name: "Create exclusion config"
  ansible.builtin.template:
    src: "tar-exclusions.txt.j2"
    dest: "{{ tar_backup.config_dir }}/tar-exclusions.txt"
    group: "root"
    owner: "root"
    mode: 0750

- name: "Create service fragment"
  include_role:
    name: "app"
    tasks_from: "service-fragment"
  vars:
    default_fragment:
      name: "tar_backup"
      definition:
        image: "ghcr.io/chris-v/tar-backup:latest"
        environment:
          TZ: "{{ timezone }}"
          PUID: 0
          PGID: 0
          UMASK_SET: "027"
          CRONTAB: "{{ tar_backup.crontab | default(omit) }}"
          PAUSE_CONTAINERS: "{{ [tar_backup.pause_containers | default([])] | flatten | join(' ') }}"
        network_mode: "none"
        restart: "always"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock:ro"
          - "{{ tar_backup.backup_dir }}:/backups"
          - "{{ tar_backup.config_dir }}:/config:ro"
          - "{{ tar_backup.data_dir }}:/data:ro"
    fragment: |
      {{
        default_fragment
          | combine(tar_backup.fragment | default({}), recursive=True, list_merge='append_rp')
          | to_json
      }}
