- name: "Install packages"
  community.general.pacman:
    name:
      - "fish"
      - "sudo"
    state: "present"

- name: "Create groups"
  loop:
    - "ssh"
    - "poweroff"
  ansible.builtin.group:
    name: "{{ item }}"
    state: "present"

- name: "Create and configure `{{ users.ansible.username }}`"
  block:
    - name: "Create user"
      register: "ansible_user"
      ansible.builtin.user:
        name: "{{ users.ansible.username }}"
        groups:
          - "ssh"
        append: false
        shell: "/usr/bin/bash"
        state: "present"

    - name: "Create .ssh/ directory"
      ansible.builtin.file:
        path: "{{ ansible_user.home }}/.ssh"
        state: "directory"
        owner: "{{ ansible_user.name }}"
        group: "{{ ansible_user.name }}"
        mode: 0740

- name: "Create and configure `{{ users.avatar.username }}`"
  block:
    - name: "Create user"
      register: "avatar_user"
      ansible.builtin.user:
        name: "{{ users.avatar.username }}"
        groups:
          - "wheel"
          - "ssh"
          - "poweroff"
        append: true
        create_home: true
        state: "present"
        shell: "/usr/bin/fish"
        password: "{{ users.avatar.password }}"

    - name: "Create .ssh/ directory"
      ansible.builtin.file:
        path: "{{ avatar_user.home }}/.ssh"
        state: "directory"
        owner: "{{ avatar_user.name }}"
        group: "{{ avatar_user.name }}"
        mode: 0740

    - name: "Add authorized keys"
      ansible.posix.authorized_key:
        exclusive: true
        key: "{{ users.avatar.pub_key }}"
        user: "{{ avatar_user.name }}"
        state: "present"

- name: "Create and configure `{{ users.homeassistant.username }}`"
  block:
    - name: "Create user"
      tags: ["always"]
      register: "home_assistant_user"
      ansible.builtin.user:
        name: "{{ users.homeassistant.username }}"
        groups:
          - "ssh"
          - "poweroff"
        create_home: true
        state: "present"
        password: "{{ users.homeassistant.password }}"

    - name: "Create .ssh/ directory"
      ansible.builtin.file:
        path: "{{ home_assistant_user.home }}/.ssh"
        state: "directory"
        owner: "{{ home_assistant_user.name }}"
        group: "{{ home_assistant_user.name }}"
        mode: 0740

    - name: "Add authorized keys"
      ansible.posix.authorized_key:
        exclusive: true
        key: "{{ users.homeassistant.pub_key }}"
        key_options: >
          restrict,from="{{ network.servers.automate.ip }}"
        user: "{{ home_assistant_user.name }}"
        state: "present"

- name: "Create sudoer rules"
  loop:
    - path: "/etc/sudoers.d/10-ansible"
      line: "{{ ansible_user.name }} ALL=(ALL) NOPASSWD: ALL"
    - path: "/etc/sudoers.d/20-wheel"
      line: "%wheel ALL=(ALL) ALL"
    - path: "/etc/sudoers.d/30-poweroff"
      line: "%poweroff ALL=NOPASSWD: /usr/bin/poweroff, /usr/bin/halt, /usr/bin/reboot"
  ansible.builtin.lineinfile:
    path: "{{ item.path }}"
    line: "{{ item.line }}"
    create: true
    owner: "root"
    group: "root"
    mode: 0440
    validate: "visudo -cf %s"
