- name: "Install packages"
  community.general.pacman:
    name:
      - "fish"
      - "sudo"
    state: "present"

- name: "Create groups"
  loop:
    - "ssh"
    - "poweroff"
  ansible.builtin.group:
    name: "{{ item }}"
    state: "present"

- name: "Create and configure `{{ users.ansible.username }}`"
  block:
    - name: "Create user"
      ansible.builtin.user:
        name: "{{ users.ansible.username }}"
        groups:
          - "ssh"
        append: false
        shell: "/usr/bin/bash"
        state: "present"

    - name: "Create .ssh/ directory"
      ansible.builtin.file:
        path: "/home/{{ users.ansible.username }}/.ssh"
        state: "directory"
        owner: "{{ users.ansible.username }}"
        group: "{{ users.ansible.username }}"
        mode: 0740

- name: "Create and configure `{{ users.avatar.username }}`"
  block:
    - name: "Create user"
      ansible.builtin.user:
        name: "{{ users.avatar.username }}"
        groups:
          - "wheel"
          - "ssh"
          - "poweroff"
        append: true
        create_home: true
        state: "present"
        shell: "/usr/bin/fish"
        password: "{{ users.avatar.password }}"

    - name: "Create .ssh/ directory"
      ansible.builtin.file:
        path: "/home/{{ users.avatar.username }}/.ssh"
        state: "directory"
        owner: "{{ users.avatar.username }}"
        group: "{{ users.avatar.username }}"
        mode: 0740

    - name: "Add authorized keys"
      ansible.posix.authorized_key:
        exclusive: true
        key: "{{ users.avatar.pub_key }}"
        user: "{{ users.avatar.username }}"
        state: "present"

- name: "Create and configure `{{ users.homeassistant.username }}`"
  block:
    - name: "Create user"
      ansible.builtin.user:
        name: "{{ users.homeassistant.username }}"
        groups:
          - "ssh"
          - "poweroff"
        create_home: true
        state: "present"
        password: "{{ users.homeassistant.password }}"

    - name: "Create .ssh/ directory"
      ansible.builtin.file:
        path: "/home/{{ users.homeassistant.username }}/.ssh"
        state: "directory"
        owner: "{{ users.homeassistant.username }}"
        group: "{{ users.homeassistant.username }}"
        mode: 0740

    - name: "Add authorized keys"
      ansible.posix.authorized_key:
        exclusive: true
        key: "{{ users.homeassistant.pub_key }}"
        key_options: 'restrict,from="{{ network.servers.automate.ip }}"'
        user: "{{ users.homeassistant.username }}"
        state: "present"

    - name: "Gather user facts"
      tags: [ "always" ]
      block:
        - name: "Find home-assistant uid"
          register: "homeassistant_uid_result"
          command: "id -u {{ users.homeassistant.username }}"
          changed_when: false
        - name: "Find home-assistant gid"
          register: "homeassistant_gid_result"
          command: "id -g {{ users.homeassistant.username }}"
          changed_when: false
        - name: "Register home-assistant user facts"
          ansible.builtin.set_fact:
            homeassistant_uid: "{{ homeassistant_uid_result.stdout }}"
            homeassistant_gid: "{{ homeassistant_gid_result.stdout }}"

- name: "Create sudoer rules"
  loop:
    - path: "/etc/sudoers.d/10-ansible"
      line: "ansible ALL=(ALL) NOPASSWD: ALL"
    - path: "/etc/sudoers.d/20-wheel"
      line: "%wheel ALL=(ALL) ALL"
    - path: "/etc/sudoers.d/30-poweroff"
      line: "%poweroff ALL=NOPASSWD: /usr/bin/poweroff, /usr/bin/halt, /usr/bin/reboot"
  ansible.builtin.lineinfile:
    path: "{{ item.path }}"
    line: "{{ item.line }}"
    create: true
    owner: "root"
    group: "root"
    mode: 0440
    validate: "visudo -cf %s"
